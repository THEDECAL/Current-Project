@model EasyBilling.Models.Pocos.AccessRight
@using EasyBilling.Helpers
@inject Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole> roleManager

<input asp-for="Id" type="hidden" class="form-control" />
<div class="form-group">
    <label asp-for="ControllerName" class="control-label"></label>
    <select class="mt-2 custom-select form-control" asp-for="ControllerName">
        @foreach (var item in await ControllerHelper.GetControllersNamesAsync())
        {
            <option value="@item.Key" selected="@(Model.ControllerName != null && item.Key.Equals(Model.ControllerName))">
                @item.Value
            </option>
    }
    </select>
    <span asp-validation-for="ControllerName" class="text-danger"></span>
</div>
<div class="mb-0 form-group">
    <label asp-for="Role" class="control-label"></label>
    <select class="mt-2 custom-select form-control" asp-for="Role.Name">
        @foreach (var item in roleManager.Roles.ToArray())
        {
            <option value="@item.Name" selected="@(Model.Role.Name != null && Model.Role.Name.Equals(item.Name))">
                @RoleHelper.GetRoleLocalizedName(item.Name)
            </option>
        }
    </select>
    <span asp-validation-for="Role" class="text-danger"></span>
</div>
<div class="form-group">
    <div class="switch">
        <label class="form-check-label">
            Запрещено
        </label>
        <label class="form-check-label">
            @{
                string chk = (Model.IsAvailable) ? "checked" : "";
                <input class="form-control" type="checkbox" asp-for="IsAvailable" chk/>
            }
            Разрешено
        </label>
        <span asp-validation-for="IsAvailable" class="text-danger"></span>
    </div>
</div>